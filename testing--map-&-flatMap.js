// TIP: A `map` of a `map` will produce a nested Array. A `flatMap` of a `map` will flatten the Arrays into one.
const suits = ['♠️', '♦️', '♣️', '♥️' ];
const ranks = ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2'];

const getCardsOfSuit = suit => ranks.map(rank => `${rank} ${suit}`);

/**
 * map creates an Array that contains 4 Arrays
 */
const deck1 = suits.map(getCardOfSuit);
/**
 * [
 *    ["A ♠️", "K ♠️", "Q ♠️", "J ♠️", "T ♠️", "9 ♠️", "8 ♠️", "7 ♠️", "6 ♠️", "5 ♠️", "4 ♠️", "3 ♠️", "2 ♠️"],
 *    ["A ♦️", "K ♦️", "Q ♦️", "J ♦️", "T ♦️", "9 ♦️", "8 ♦️", "7 ♦️", "6 ♦️", "5 ♦️", "4 ♦️", "3 ♦️", "2 ♦️"],
 *    ["A ♣️", "K ♣️", "Q ♣️", "J ♣️", "T ♣️", "9 ♣️", "8 ♣️", "7 ♣️", "6 ♣️", "5 ♣️", "4 ♣️", "3 ♣️", "2 ♣️"],
 *    ["A ♥️", "K ♥️", "Q ♥️", "J ♥️", "T ♥️", "9 ♥️", "8 ♥️", "7 ♥️", "6 ♥️", "5 ♥️", "4 ♥️", "3 ♥️", "2 ♥️"]
 * ]
 */

const deck2 = suits.flatMap(getCardsOfSuit)
/**
 *    ["A ♠️", "K ♠️", "Q ♠️", "J ♠️", "T ♠️", "9 ♠️", "8 ♠️", "7 ♠️", "6 ♠️", "5 ♠️", "4 ♠️", "3 ♠️", "2 ♠️", 
 *     "A ♦️", "K ♦️", "Q ♦️", "J ♦️", "T ♦️", "9 ♦️", "8 ♦️", "7 ♦️", "6 ♦️", "5 ♦️", "4 ♦️", "3 ♦️", "2 ♦️", 
 *     "A ♣️", "K ♣️", "Q ♣️", "J ♣️", "T ♣️", "9 ♣️", "8 ♣️", "7 ♣️", "6 ♣️", "5 ♣️", "4 ♣️", "3 ♣️", "2 ♣️", 
 *     "A ♥️", "K ♥️", "Q ♥️", "J ♥️", "T ♥️", "9 ♥️", "8 ♥️", "7 ♥️", "6 ♥️", "5 ♥️", "4 ♥️", "3 ♥️", "2 ♥️"]
 */